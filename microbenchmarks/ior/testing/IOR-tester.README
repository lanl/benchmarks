/******************************************************************************\
*                                                                              *
*        Copyright (c) 2003, The Regents of the University of California       *
*      See the file COPYRIGHT for a complete copyright notice and license.     *
*                                                                              *
\******************************************************************************/

The IOR-tester runs a series of tests to check and maintain the existing
functionality of the source code as code is modified.  The IOR-tester creates
a default test, then modifies it to run test scripts.  It runs a large number
of tests, most which are expected to pass, but some with an expectation of
failure.

To run the code, modify the 'DefaultTest' dictionary in the source code to
reflect the test file location, the executable location, etc.  Then, run
the code using './IOR-tester.py'.

The expected-pass, pattern-independent tests include:
	POSIX only:
	  o retry transfer

	MPIIO only:
	  o hints
	  o preallocation

	Both POSIX and MPIIO:
	  o repetition count
	  o intertest delay
	  o test file removal
	  o verbosity
	
The expected-pass, pattern-dependent tests include:
	POSIX:
	  o write-only, read-only, write/read, and write/read check
	  o fpp and single file
	  o segmented, strided
	  o zero-length, 4-byte, and larger file, block, and transfer sizes
	MPIIO (same as POSIX, but using MPIIO access):
	  o noncollective
	  o noncollective, file view
	  o collective
	  o collective, file view
	
The expected-fail tests include:
	Both POSIX and MPIIO:
	  o repetition count
